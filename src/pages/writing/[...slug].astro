---
import { type CollectionEntry, getCollection } from 'astro:content';
import BlogPostLayout from '../../layouts/BlogPostLayout.astro';
import { render } from 'astro:content';

export async function getStaticPaths() {
  const blogPosts = await getCollection('blog');
  const newsletters = await getCollection('newsletters');

  return [
    ...blogPosts.map((post) => ({
      params: { slug: post.id },
      props: { type: 'blog', entry: post },
    })),
    ...newsletters.map((newsletter) => ({
      params: { slug: newsletter.id },
      props: { type: 'newsletter', entry: newsletter },
    })),
  ];
}

type Props = {
  type: 'blog' | 'newsletter';
  entry: CollectionEntry<'blog'> | CollectionEntry<'newsletters'>;
};

const { type, entry } = Astro.props;
const { Content } = await render(entry);
---

{
  type === 'blog' && (
    <BlogPostLayout {...(entry as CollectionEntry<'blog'>).data}>
      <Content />
    </BlogPostLayout>
  )
}

{
  type === 'newsletter' && (
    <BlogPostLayout
      title={(entry as CollectionEntry<'newsletters'>).data.title}
      description={
        (entry as CollectionEntry<'newsletters'>).data.description ?? ''
      }
      pubDate={(entry as CollectionEntry<'newsletters'>).data.pubDate}
      heroImage={(entry as CollectionEntry<'newsletters'>).data.heroImage}
      tags={(entry as CollectionEntry<'newsletters'>).data.tags}
    >
      <div set:html={(entry as CollectionEntry<'newsletters'>).data.content} />
    </BlogPostLayout>
  )
}
